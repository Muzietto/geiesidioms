// main idioms components
package (
  curried
  list
)
{

  // use @ instead
  curried := \fun -> {
    return \value -> {
      return ? (fun.length <= 1) :
        (fun value) :
        curried(fun.bind (undefined, value));
    };
  };
  
  list := \...args -> ({
    is_functor: true,
    is_applicative: true,
    fmap : \...fabs -> list <<|
      fabs.reduce(\acc curr -> acc.concat(args.map curr), []),
    ap: \afa -> afa.fmap <<| args,
    get: \index -> args.(index)
  });


}