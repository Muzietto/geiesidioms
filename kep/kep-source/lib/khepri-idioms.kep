// main idioms components
package (
  curried
  list
)
{

  curried := \fun -> \value -> ? (fun.length <= 1) : (fun value) : curried(fun @ value);
  
  list := \...args -> ({
    is_functor: true,
    is_applicative: true,
    fmap : \...fabs -> list <<|
      fabs.reduce(\acc curr -> acc.concat(args.map curr), []),
    ap: \afa ->  args |>> afa.fmap,
    get: \index -> args.(index),
    toString: \_ -> '[' + args.toString() + ']'
  });


}